import matplotlib.pyplot as plt
import numpy as np

baseline = [10.08, 25.01, 28.48, 26.49, 34.5 , 35.88, 39.22, 32.81, 36.31, 42.25, 40.87, 38.75,
43.17, 45.85, 46.15, 43.99, 45.67, 45.95, 47.62, 48.57, 50.05, 50.41, 45.23, 52.28,
49.31, 46.17, 49.42, 48.11, 52.23, 54.69, 53.  , 53.63, 55.49, 53.83, 48.81, 53.,
51.87, 55.44, 55.32, 57.92, 53.57, 57.44, 53.14, 52.48, 52.1 , 55.52, 54.46, 49.89,
57.64, 52.87, 53.63, 56.89, 56.7 , 58.07, 59.46, 48.3 , 56.5 , 57.42, 56.29, 53.83,
58.48, 57.31, 54.38, 55.29, 56.16, 53.86, 56.99, 61.83, 52.46, 59.98, 56.84, 54.75,
56.63, 59.52, 55.04, 59.23, 59.69, 60.28, 58.31, 60.68, 59.82, 57.43, 59.78, 59.58,
59.97, 60.28, 60.06, 58.62, 59.28, 58.7 , 55.87, 58.52, 60.25, 57.71, 59.07, 58.95,
62.28, 59.25, 62.25, 60.04]

f1 = [17.41, 15.15, 26.81, 28.08, 31.44, 31.06, 32.62, 41.14, 36.99, 44.6 , 46.67, 47.14,
47.97, 43.  , 43.6 , 46.92, 47.99, 49.65, 49.99, 45.59, 50.03, 49.16, 49.08, 51.33,
51.59, 52.42, 51.75, 50.65, 51.7 , 54.19, 53.69, 53.95, 50.81, 54.92, 55.54, 48.17,
53.14, 57.59, 50.12, 50.37, 53.88, 54.15, 54.65, 55.34, 56.13, 54.86, 51.15, 53.16,
52.23, 55.75, 56.63, 50.79, 54.88, 54.97, 56.4 , 56.04, 56.27, 52.04, 57.6 , 58.37,
50.66, 56.12, 55.3 , 57.29, 57.42, 56.88, 56.45, 59.93, 58.34, 55.63, 55.97, 58.47,
58.69, 58.69, 54.81, 58.15, 53.09, 51.06, 58.35, 57.36, 57.02, 56.13, 58.03, 55.22,
51.78, 56.24, 59.35, 58.98, 60.09, 59.15, 56.53, 57.67, 57.65, 58.41, 52.57, 58.69,
60.85, 59.83, 58.08, 59.28]

f2 = [17.57, 22.15, 27.42, 18.96, 26.3 , 33.8 , 31.94, 30.43, 34.48, 37.3 , 38.93, 38.81,
 41.06, 44.14, 38.4 , 36.91, 42.8 , 42.26, 39.75, 41.05, 41.81, 45.16, 45.24, 47.28,
 46.49, 47.07, 41.3 , 44.88, 40.79, 47.12, 46.29, 41.86, 44.45, 48.03, 48.88, 52.77,
 51.13, 46.87, 47.15, 45.83, 43.21, 49.92, 43.49, 45.6 , 52.16, 49.19, 44.06, 45.85,
 46.35, 48.05, 48.86, 51.74, 50.31, 49.17, 50.24, 44.6 , 45.86, 44.93, 47.15, 44.45,
 51.09, 45.52, 47.67, 47.43, 48.13, 55.36, 53.2 , 50.07, 50.67, 48.79, 48.37, 49.45,
 50.43, 50.89, 52.01, 49.98, 49.6 , 46.25, 50.33, 52.7 , 46.07, 48.21, 51.36, 50.39,
 51.97, 49.17, 52.44, 47.19, 52.54, 51.23, 46.62, 51.41, 52.17, 50.77, 50.75, 50.12,
 51.96, 47.08, 48.46, 54.16]

f3 = [13.66, 17.45, 21.78, 31.81, 31.05, 32.4 , 33.27, 35.25, 38.46, 43.4 , 41.65, 44.39,
 43.43, 43.07, 43.93, 41.8 , 48.04, 44.35, 42.94, 46.5 , 48.03, 45.21, 42.15, 48.97,
 46.53, 42.36, 45.13, 46.25, 42.06, 52.33, 42.85, 44.71, 47.58, 48.17, 47.22, 45.88,
 43.78, 44.9 , 48.91, 47.17, 43.29, 43.24, 46.86, 42.58, 44.47, 49.79, 46.03, 47.13,
 43.65, 47.99, 44.29, 45.28, 49.67, 46.53, 48.32, 48.03, 46.6 , 51.66, 47.1 , 46.42,
 46.76, 49.24, 46.54, 43.67, 49.63, 49.77, 49.98, 45.51, 49.48, 48.91, 44.22, 47.19,
 49.47, 44.92, 39.37, 44.46, 46.79, 44.76, 48.99, 52.26, 45.84, 45.85, 45.03, 46.85,
 47.02, 51.02, 44.3 , 53.02, 48.33, 46.9 , 46.88, 47.1 , 46.11, 48.31, 47.31, 46.45,
 46.84, 51.63, 48.43, 44.7]

f4 = [19.23, 25.95, 29.46, 24.92, 34.67, 38.4 , 37.15, 32.53, 41.22, 36.56, 35.81, 36.12,
 43.61, 46.28, 45.86, 41.66, 47.56, 42.92, 50.27, 47.29, 50.67, 48.61, 45.82, 52.81,
 44.31, 49.23, 47.41, 51.5 , 45.95, 49.35, 48.34, 51.44, 46.86, 49.15, 44.89, 47.63,
 48.11, 48.23, 49.61, 51.41, 49.84, 48.76, 48.84, 46.11, 49.05, 49.46, 52.12, 52.15,
 47.07, 50.01, 50.99, 49.5 , 47.8 , 46.63, 48.64, 48.32, 49.38, 50.17, 48.95, 48.67,
 48.48, 48.4 , 52.21, 43.82, 52.22, 49.14, 49.08, 51.17, 53.12, 50.56, 50.57, 47.34,
 51.58, 46.86, 47.88, 51.1 , 52.57, 47.54, 50.26, 50.33, 49.22, 44.7 , 48.07, 49.52,
 48.68, 44.07, 48.02, 51.54, 46.47, 48.21, 48.85, 44.95, 45.05, 46.51, 47.58, 46.09,
 50.45, 49.08, 48.12, 48.95]


def offline_plot(title, y_title):
    plt.title(title)
    plt.ylabel(y_title)  # y label
    plt.xlabel("Iteration Rounds")  # x label

    plt.plot(baseline, label='Baseline: No freeze',          marker="o", linestyle="-")
    plt.plot(f1,       label='Static Freeze: First 1 layer', marker="o", linestyle="-")
    plt.plot(f2,       label='Static Freeze: First 2 layer', marker="o", linestyle="-")       
    plt.plot(f3,       label='Static Freeze: First 3 layer', marker="o", linestyle="-")       
    plt.plot(f4,       label='Static Freeze: First 4 layer', marker="o", linestyle="-")       

    plt.legend()
    plt.show()


if __name__ == "__main__":
    offline_plot("Federated Learning with LeNet-5 on CIFAR 10 Dataset, Static Freezing", "Accuracy")